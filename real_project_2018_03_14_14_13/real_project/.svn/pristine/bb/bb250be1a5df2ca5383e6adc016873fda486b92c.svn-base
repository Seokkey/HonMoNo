package com.project.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.project.dao.BoardDao;
import com.project.dao.CategoryDao;
import com.project.dto.BoardDto;
import com.project.dto.CategoryDto;
import com.project.useClass.UploadFile;

@Service
public class UsedBoardService {
	
	@Autowired
	private BoardDao bDao;
	@Autowired
	private CategoryDao cDao;
	
	private ModelAndView mav;
	
	@Autowired
	HttpServletRequest request;

	//중고거래 리스트
	public ModelAndView usedboardList(CategoryDto categorydto) {	
		Map<Object,Object> map = new HashMap<>();
		BoardDto boarddto = new BoardDto();
		String page = null;
		int c_idx = categorydto.getC_idx();
		System.out.println("중고거래 리스트 c_idx : "+ c_idx);
		String nick=(String) request.getSession().getAttribute("loginNick");		
		System.out.println("중고거래 리스트 ///b_nick : "+nick);
		map.put("c_idx",c_idx);
		map.put("b_nick",nick);
		int faEx = cDao.getFavorite(map);
		
		System.out.println("faEx : "+faEx);
		int c_num = categorydto.getC_num();
		String search = null;
		String keyword = null;
		String product = null;
		String area = null;
		
		if(area == null && product ==null && keyword==null&&search==null && page==null){
			
			map.put("area",area);
			map.put("product", product);
			map.put("keyword",keyword);
			map.put("search", search);
			map.put("page",page);
		
		}else{
			area=request.getParameter("area");		
			product = request.getParameter("product");			
			keyword = request.getParameter("keyword");		
			search	=	request.getParameter("search");
			page=request.getParameter("page");
			
			map.put("area",area);
			map.put("product", product);
			map.put("keyword",keyword);
			map.put("search", search);
			map.put("page",page);
		}
			
			System.out.println("c_idx : "+categorydto.getC_idx());
			System.out.println(" 확인 : "+area+"//"+product+"//"+keyword+"//"+search+"//");
		//page는 현재 페이지 , spage는 현재 페이지 번호 만듬
		 	 int spage=1 ;//   
		 	 
			 if(page !=null){
				 spage = Integer.parseInt(page);
			 }
			 int start = spage*10-9;
			
		  //start는 dao에서 set string에 넣어주는데 한 페이지에 보여줄 게시물을 start , start+a 로 표현 

		  // 한 화면에 10개의 게시글을 보여지게함
		  // 페이지 번호는 총 10개, 이후로는 [다음]으로 표시	        
		  // 전체 페이지 수
			 //글개수
			int listCount = bDao.listcount(map);//게시물 총 개수
			System.out.println("usedlistCount : "+listCount);
			
			map.put("start",start);
			System.out.println("map : " + map);
			//리스트가져오기
			List<BoardDto> usedboardList=bDao.usedList(map);
			int countPage = 10;//한 화면에 보여질 페이지 개수
		        int maxPage = (int)(listCount/10.0); //마지막 페이지
		        if (listCount % 10 > 0) {
		        	maxPage++;
		        	};
		        if (maxPage < spage) {
		            spage = maxPage;
		        	};
		        //시작 페이지 번호
		        int startPage = (int)((spage - 1) / 10) * 10 + 1;
		        
		        //한 화면에 보여지는 마지막 페이지 번호
		        int endPage = startPage + countPage-1;
		        if(endPage > maxPage) {
		        	endPage = maxPage;
		        };
		
		mav =  new ModelAndView();
		mav.addObject("spage",spage);
		mav.addObject("searchlist", map);		
		mav.addObject("usedboardList", usedboardList);
		mav.addObject("c_num", c_num);
		mav.addObject("maxPage", maxPage);
		mav.addObject("startPage", startPage);
		mav.addObject("endPage", endPage);
		mav.addObject("c_idx",c_idx);
		mav.addObject("faEx", faEx);
		
		System.out.println("중고거래 리스트 보내는 리스트 : "+spage+"//"+usedboardList);
		mav.setViewName("used/usedList");
		return mav;
	}


	//글쓰기 제품 이름 가져오기
	public ModelAndView getProduc(int c_idx) {
		System.out.println("produc c_idx : "+c_idx);
		String produc=bDao.getProduc(c_idx);
		
		System.out.println("produc : "+produc);
		mav.addObject("produc", produc);
		return mav;
	}

	//중고거래 글쓰기
	public ModelAndView useWrite(BoardDto boarddto, MultipartHttpServletRequest multi ) {
		System.out.println(boarddto.getU_bors());
		System.out.println(boarddto.getU_brand());		
		
		System.out.println("filechk : "+boarddto.getFilechk());
		Map<String,String> fileMap = null;
		
		String inDate   = new java.text.SimpleDateFormat("yyyyMMdd").format(new java.util.Date());
		System.out.println(inDate);
		if(boarddto.getFilechk() == 1){
			UploadFile upload = new UploadFile();
			fileMap=upload.fileUp(multi,inDate);
		}
		mav= new ModelAndView();
		String view="";
		if(usedWrite(boarddto,fileMap,boarddto.getFilechk()) != 0){
			view="redirect:/listCall";
			System.out.println("쿠퀘퀘퀘퀘퀘");
		}else{
			view="/usedWriteForm";
		}
		mav.setViewName(view);
		return mav;
	}

	//글쓰기
	private int usedWrite(BoardDto boarddto, Map<String, String> fileMap, int filechk) {
		String b_nick=(String) request.getSession().getAttribute("loginNick");
		boarddto.setB_nick(b_nick);
		int b = bDao.useWrite(boarddto);
		int u = -1 ;
		if(b == 1){
			System.out.println("b_idx : "+boarddto.getB_idx());
			u= bDao.usedWrite(boarddto);
		}		
		int f= -1;
		if(filechk ==1){
			fileMap.put("b_idx",String.valueOf(boarddto.getB_idx()));
			f=bDao.fileInsert(fileMap);
		}
		if(u !=0 && f!=0){
			return 1;
		}
		return 0;
	}


	//중고거래 상세보기
	public ModelAndView usedDetail(int b_idx) {
		BoardDto boarddto = new BoardDto();
		
		boarddto = bDao.usedDetail(b_idx);
		mav.addObject("boarddto", boarddto);
		mav.setViewName("");
		return mav;
	}
}






























