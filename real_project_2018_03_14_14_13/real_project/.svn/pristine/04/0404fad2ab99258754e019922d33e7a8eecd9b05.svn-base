package com.project.honMoNo;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.project.dto.BoardDto;
import com.project.dto.CategoryDto;
import com.project.dto.MemberDto;
import com.project.service.CategoryService;
import com.project.service.EstiBoardService;
import com.project.service.EvBoardService;
import com.project.service.UsedBoardService;


@Controller
public class MoveController {
	
	@Autowired
	private CategoryService cs;
	@Autowired
	private EvBoardService evbs;
	@Autowired
	private EstiBoardService ebs;
	
	@Autowired
	UsedBoardService ubs;
	private HttpServletRequest request;
	
	//메인페이지 호출
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public ModelAndView home() {	
		ModelAndView mav = new ModelAndView();
		mav.setViewName("main");
		
		return mav;
	}
	
	//메인 메뉴바 불러오기
	@RequestMapping(value = "/maincategory",  produces = "application/json; charset=utf8")
	public @ResponseBody Map<String,List<CategoryDto>> rcontents(CategoryDto categorydto ) {
		System.out.println("ㅇ,ㅇ?");
		Map<String,List<CategoryDto>> cMap=cs.getMainCate();
		System.out.println(cMap);
		return cMap;
	}	

	//내 견적 페이지 호출
	@RequestMapping(value = "/myEstimate", method = RequestMethod.GET)
	public ModelAndView myEstimate() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("estimate/estimatePage");
		
		return mav;
	}
	
	//내 중고 페이지 호출
	@RequestMapping(value = "/myUsed", method = RequestMethod.GET)
	public ModelAndView myUsed() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("used/usedList");
		
		return mav;
	}
	
	//내 쪽지 페이지 호출
	@RequestMapping(value = "/noteList", method = RequestMethod.GET)
	public ModelAndView noteList() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("message/messageList");
		
		return mav;
	}
	
	//내 도면 페이지 호출
	@RequestMapping(value = "/planDrawingList", method = RequestMethod.GET)
	public ModelAndView planDrawingList() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("canvas/canvasList");
		
		return mav;
	}
	
	//내 구매 페이지 호출
	@RequestMapping(value = "/myBuyList", method = RequestMethod.GET)
	public ModelAndView myBuyList() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("myBuyList");
		
		return mav;
	}
	
	//도면 그리기 호출
	@RequestMapping(value = "/planDrawingWrite", method = RequestMethod.GET)
	public ModelAndView planDrawingWrite() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("canvas/canvasWrite");
		
		return mav;
	}
	
	/*
	//아이디 찾기1 호출
	@RequestMapping(value = "/myIdFind", method = RequestMethod.GET)
	public ModelAndView myIdFind() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("myIdFind");
		
		return mav;
	}
	
	//아이디 찾기2 호출
	@RequestMapping(value = "/myIdFind2", method = RequestMethod.GET)
	public ModelAndView myIdFind2() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("myIdFind2");
		
		return mav;
	}
	
	//비밀번호 찾기 호출
	@RequestMapping(value = "/myPwFind", method = RequestMethod.GET)
	public ModelAndView myPwFind() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("myPwFind");
		
		return mav;
	}
	*/
	
	//관리자 1:1대화 페이지 호출
	@RequestMapping(value = "/noteSendAdmin", method = RequestMethod.GET)
	public ModelAndView noteSendAdmin() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("noteSendAdmin");
		
		return mav;
	}
	
	//관리자 1:1대화 페이지 호출
	@RequestMapping(value = "/noteListAdmin", method = RequestMethod.GET)
	public ModelAndView noteListAdmin() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("noteListAdmin");
		
		return mav;
	}
	
	//가입대기 업체리스트 호출
	@RequestMapping(value = "/adminUserList1", method = RequestMethod.GET)
	public ModelAndView userList1() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("admin/adminUserList1");
		
		return mav;
	}
	
	//소비자 회원 리스트 호출
	@RequestMapping(value = "/adminUserList2", method = RequestMethod.GET)
	public ModelAndView userList2() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("admin/adminUserList2");
		
		return mav;
	}
	
	//업체 회원 리스트 호출
	@RequestMapping(value = "/adminUserList3", method = RequestMethod.GET)
	public ModelAndView userList3() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("admin/adminUserList3");
		
		return mav;
	}
	
	//용달 리스트 페이지 호출
	@RequestMapping(value = "/deliveryList", method = RequestMethod.GET)
	public ModelAndView deliveryList() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("admin/adminDeliveryList");
		
		return mav;
	}
	
	//게시판 카테고리 수정 페이지 호출
	@RequestMapping(value = "/boardCategory", method = RequestMethod.GET)
	public ModelAndView boardCategory() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("admin/adminCategoryUpdate");
		
		return mav;
	}
	
	//도면 그리기 호출
	@RequestMapping(value = "/a", method = RequestMethod.GET)
	public ModelAndView aaa() {
		
		ModelAndView mav = new ModelAndView();
		mav.setViewName("noteView");
		
		return mav;
	}
	
	//소비자 회원가입 폼 이동
	@RequestMapping(value = "/memberJoinForm", method = RequestMethod.GET)
	public ModelAndView memberJoinForm() {
		
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("member/memberJoinForm");
		
		return mav;
	}
	
	//업체 회원가입 폼 이동
	@RequestMapping(value = "/memberShopJoinForm", method = RequestMethod.GET)
	public ModelAndView memberShopJoinForm() {
		
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("member/memberShopJoinForm");
		
		return mav;
	}
	
	//회원가입 선택 폼 이동
	@RequestMapping(value = "/memberJoinChoice", method = RequestMethod.GET)
	public ModelAndView memberJoinChoice() {
		
		ModelAndView mav = new ModelAndView();
		
		mav.setViewName("member/memberJoinChoice");
		
		return mav;
	}
	
	//리스트 페이지 호출
	@RequestMapping(value = "/listCall", method = RequestMethod.GET)
	public ModelAndView listCall(CategoryDto cdto) {	
		ModelAndView mav = new ModelAndView();
		BoardDto boarddto = new BoardDto();		
		
		switch (cdto.getC_num()) {
		
		case 0:
			if(cdto.getC_idx()==6){//대분류 공지&이벤트 눌렀을때 디폴트 페이지
				mav.setViewName("event/noticeView");
			}
			break;
			
		case 1:
			if(cdto.getC_idx()==8){//대분류 견적문의 눌렀을때 디폴트 페이지
				mav.setViewName("estimate/estimatePage");
			}else{
				System.out.println("견적문의 리스트 요청");
				mav=ebs.estiBoardList();
				/*소분류 가져오기*/
			}
			break;
			
		case 2:
			if(cdto.getC_idx()==12){//대분류 중고거래 눌렀을때 디폴트 페이지
				mav.setViewName("used/usedGuide");
			}else{								
				mav=ubs.usedboardList();
			}
			break;
			
		case 3:
			if(cdto.getC_idx()==16){//대분류 매장정보 눌렀을때 디폴트 페이지
				mav.setViewName("shop/shopGuide");
			}
			break;
			
		case 4:
			if(cdto.getC_idx()==20){//대분류 고객문의 눌렀을때 디폴트 페이지
				mav.setViewName("QnA/faq");
			}
			break;

		default:
			break;
		}
		
		mav.addObject("categorydto", cdto);
		mav.addObject("c_idx", cdto.getC_idx());
		return mav;
	}
	
}
