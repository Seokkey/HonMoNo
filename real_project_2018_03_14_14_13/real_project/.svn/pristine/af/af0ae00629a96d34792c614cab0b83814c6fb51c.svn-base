<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.project.*" />
	
	<!-- DriverManager :: connection 1개로 사용 -->
	<!-- <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="net.sf.log4jdbc.DriverSpy"/>
		<beans:property name="url" value="jdbc:log4jdbc:oracle:thin:@192.168.0.159:1521:XE"/>
		<beans:property name="username" value="web_user"/>
		<beans:property name="password" value="pass"/>
	</beans:bean> -->
	
	<beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="jdbc/Oracle"/>
		<beans:property name="resourceRef" value="true"/>
	</beans:bean>
	
	
	<!-- sqlSessionFactory :: Mybatis가 사용 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="configLocation" value="classpath:com/project/dao/mybatis-conf.xml"/>
		<beans:property name="mapperLocations" value="classpath:com/**/mapper/*.xml"/>
	</beans:bean>
	
	<!-- DAO using :: member -->
	<beans:bean id="mDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface" value="com.project.dao.MemberDao"/>
	</beans:bean>
	
	<!-- DAO using :: board -->
	<beans:bean id="bDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface" value="com.project.dao.BoardDao"/>
	</beans:bean>
	
	<!-- DAO using :: category -->
	<beans:bean id="cDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface" value="com.project.dao.CategoryDao"/>
	</beans:bean>
	
	
	<!-- 파일 첨부(Multipart Resolver 설정):
			form태그 enctype="multipart/form-data" 인 경우 서버의 Bean으로 전달해줌  -->
	<!--  <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8"/>//한글 파일명 
		<beans:property name="maxUploadSize" value="10000000"/> //10MB
		<beans:property name="maxInMemorySize" value="10000000"/>	
	</beans:bean>
	 -->

	<!-- Transaction 처리 -->
	<!-- <beans:bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean> -->
	<!-- @Transactional 사용 용도 : 반드시 servlet-context.xml에 설정해야 함 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/>  -->
	
	
</beans:beans>
