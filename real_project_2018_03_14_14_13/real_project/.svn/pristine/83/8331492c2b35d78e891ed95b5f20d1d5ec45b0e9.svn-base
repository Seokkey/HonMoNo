package com.project.honMoNo;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.project.dto.BoardDto;
import com.project.dto.CategoryDto;
import com.project.dto.MemberDto;
import com.project.dto.MessageDto;
import com.project.dto.SafeDealDto;
import com.project.service.MypageService;

@Controller
public class MypageController {
	
	@Autowired
	private MypageService mps;
	@Autowired	
	private HttpServletRequest request;
	
	ModelAndView mav = null;
	
	//관심게시판 리스트 호출
	@RequestMapping(value = "/myFavoriteBbsList",  produces = "application/json; charset=utf8")
	public @ResponseBody Map<String, List<Integer>> myFavoriteBbsList() {
		System.out.println("관심게시판 리스트 호출 진입");
		
		Map<String, List<Integer>> fmap = null;
		List<Integer> flist = mps.myFavoriteBbsList();
		if(flist != null){
			fmap.put("flist", flist);
		}
		
		return fmap;
	}	
	
	//내 견적 리스트 호출
	@RequestMapping(value = "/myTradeList",  produces = "application/json; charset=utf8")
	public @ResponseBody Map<String, List<SafeDealDto>> myTradeList() {
		System.out.println("내 견적 리스트 호출 진입");
		
		Map<String, List<SafeDealDto>> tmap = new HashMap<String, List<SafeDealDto>>();
		List<SafeDealDto> tlist = mps.myTradeList();
		
		tmap.put("tlist", tlist);
		
		return tmap;
	}	
	
	
	@RequestMapping(value="/detailPopUp", method = RequestMethod.POST)
	public ModelAndView detailPopUp(SafeDealDto safedealdto){
		System.out.println("detailPopUp 컨트롤러 호출");
		
		mav=mps.detailPopUp(safedealdto);
		
		System.out.println("mav=mps.detailPopUp(safedealdto); 완료");
		return mav;
	}
	
	//내 정보 수정 페이지1 이동
		@RequestMapping(value = "/myInfoPage1", method = RequestMethod.GET)
		public ModelAndView myInfoPage1() {	
			mav = new ModelAndView();
			
			mav = mps.myInfoPage1();
			
			mav.setViewName("myPage/myInfoPage1");
			
			return mav;
		}
		
		//내 정보 수정 페이지2 이동
		@RequestMapping(value = "/myInfoPage2", method = RequestMethod.GET)
		public ModelAndView myInfoPage2() {	
			mav = new ModelAndView();
			mav = mps.myInfoPage2();
			
			mav.setViewName("myPage/myInfoPage2");
			
			return mav;
		}
		
/*		// mypage 수정
		@RequestMapping(value = "/update_mypage", method = RequestMethod.POST)
		public String update_mypage(@ModelAttribute MemberDto member) {
			mps.update_mypage(member);
			return "redirect:/myInfoPage1";
		}*/
		
		//거래요청중 판매자가 정정요청 눌렀을시
		@RequestMapping(value="/dealModifyCall", method = RequestMethod.GET)
		public ModelAndView dealModifyCall(SafeDealDto safedealdto){
			System.out.println("dealModifyCall 컨트롤러 호출");
			
			mav=mps.dealModifyCall(safedealdto);
			
			return mav;
		}
		
		//
		@RequestMapping(value="/dealModifyStart", method = RequestMethod.GET)
		public ModelAndView dealModifyStart(SafeDealDto safedealdto){
			System.out.println("dealModifyStart 컨트롤러 호출");
			
			mav=mps.dealModifyStart(safedealdto);
			
			return mav;
		}
		
		//
		@RequestMapping(value="/dealUpdate", method = RequestMethod.POST)
		public ModelAndView dealUpdate(SafeDealDto safedealdto){
			System.out.println("dealUpdate 컨트롤러 호출");
			
			mav=mps.dealUpdate(safedealdto);
			
			return mav;
		}
		
		//
		@RequestMapping(value="/dealAgree", method = RequestMethod.GET)
		public ModelAndView dealAgree(SafeDealDto safedealdto){
			System.out.println("dealAgree 컨트롤러 호출");
			
			mav=mps.dealAgree(safedealdto);
			
			return mav;
		}
		
		//
		@RequestMapping(value="/dealCancel", method = RequestMethod.GET)
		public ModelAndView dealCancel(SafeDealDto safedealdto){
			System.out.println("dealCancel 컨트롤러 호출");
			
			mav=mps.dealCancel(safedealdto);
			
			return mav;
		}
		
		//
		@RequestMapping(value="/dealCancelAgree", method = RequestMethod.GET)
		public ModelAndView dealCancelAgree(SafeDealDto safedealdto){
			System.out.println("dealCancelAgree 컨트롤러 호출");
			
			mav=mps.dealCancelAgree(safedealdto);
			
			return mav;
		}
		
		//
		@RequestMapping(value="/payChk", method = RequestMethod.GET)
		public ModelAndView payChk(SafeDealDto safedealdto){
			System.out.println("payChk 컨트롤러 호출");
			
			mav=mps.payChk(safedealdto);
			
			return mav;
		}
		
		//
		@RequestMapping(value="/dealCancelRequest", method = RequestMethod.GET)
		public ModelAndView dealCancelRequest(SafeDealDto safedealdto){
			System.out.println("dealCancelRequest 컨트롤러 호출");
			
			mav=mps.dealCancelRequest(safedealdto);
			
			return mav;
		}
		
		//
		@RequestMapping(value="/dealConfirm", method = RequestMethod.GET)
		public ModelAndView dealConfirm(SafeDealDto safedealdto){
			System.out.println("dealConfirm 컨트롤러 호출");
			
			mav=mps.dealConfirm(safedealdto);
			
			return mav;
		}
		
		//
		@RequestMapping(value="/dealCancelCancel", method = RequestMethod.GET)
		public ModelAndView dealCancelCancel(SafeDealDto safedealdto){
			System.out.println("dealCancelCancel 컨트롤러 호출");
			
			mav=mps.dealCancelCancel(safedealdto);
			
			return mav;
		}
		
		@RequestMapping(value = "/sendMsg", produces = "application/json; charset=utf8")
		public @ResponseBody Map<String, Object> sendMsg(MessageDto messageDto) {		
			System.out.println("메시지 전송 요청 sendnick:"+messageDto.getMsg_sendnick());
			System.out.println("메시지 전송 요청 recivenick:"+messageDto.getMsg_recivenick());
			System.out.println("메시지 전송 요청 글 내용:"+messageDto.getMsg_content());
			System.out.println("메시지 전송 요청 글 idx:"+messageDto.getB_idx());
			System.out.println("메시지 전송 요청 글 cnum:"+messageDto.getC_num());
			Map<String,Object> msgMap = mps.sendMsg(messageDto);
			return msgMap;
		}
	
	
}
