package com.project.honMoNo;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.project.dto.BoardDto;
import com.project.dto.CategoryDto;
import com.project.dto.ReplyDto;
import com.project.service.EstiBoardService;

@Controller
public class EstiMateController {
	
	@Autowired
	private EstiBoardService ebs;
	
	/*//견적문의 이용안내 페이지 안 탈 수도있음
	@RequestMapping(value = "/estipage", method = RequestMethod.GET)
	public ModelAndView estipage() {		
		
		System.out.println("견적문의 이용안내 페이지");
		ModelAndView mav = new ModelAndView();
		mav.setViewName("estimate/estimatePage");
		mav.addObject("estiCategoList", ?)
		mav.addObject("estiBrandList", ?)
		
		return mav;
	}		
	
	//견적문의 리스트 요청
	@RequestMapping(value = "/estiBoardList", method = RequestMethod.GET)
	public ModelAndView estiBoardList() {		
		
		System.out.println("견적문의 리스트 요청");
		ModelAndView mav = new ModelAndView();
		mav=ebs.estiBoardList();
		소분류 가져오기
		
		return mav;
	}*/
	
	//견적문의 글쓰기폼 요청
	@RequestMapping(value = "/estiWriteForm", method = RequestMethod.GET)
	public ModelAndView estiWriteForm(CategoryDto categorydto) {		
		//세션체크 해야함
		System.out.println("견적문의 글쓰기폼 요청");
		ModelAndView mav = new ModelAndView();
		mav=ebs.estiWriteForm(categorydto);		
		return mav;
	}
	
	//견적문의 상세보기 요청
	@RequestMapping(value = "/estiDetail", method = RequestMethod.GET)
	public ModelAndView estiDetail(CategoryDto categorydto) {		
		
		System.out.println("견적문의 상세보기 요청");
		System.out.println("상세보기 씨넘:"+categorydto.getC_num());
		System.out.println("상세보기 씨idx:"+categorydto.getC_idx());
		ModelAndView mav = new ModelAndView();
		mav=ebs.estiDetail(categorydto);
		
		
		return mav;
	}
	
	//댓글 작성	
	@RequestMapping(value = "/estiReplyWrite"
			,produces = "application/json; charset=utf8")
	public @ResponseBody Map<String,List<ReplyDto>> estiReplyWrite(ReplyDto reply) {
		System.out.println("댓글 작성, 댓글 리스트 불러오기 요청");
		Map<String,List<ReplyDto>> rMap=ebs.estiReplyWrite(reply);		
		return rMap; //jackson이 Map을 json형태로 변환한다.
	}
	
	
	
	//견적문의 글 등록 요청
	@RequestMapping(value = "/estiBoardWrite", method = RequestMethod.POST)
	public ModelAndView estiBoardWrite(BoardDto board, MultipartFile[] b_files, CategoryDto categorydto) throws IOException {		
		//세션체크 해야함
		System.out.println("견적문의 글 등록 요청");
		ModelAndView mav = new ModelAndView();
		mav=ebs.estiBoardWrite(board, b_files, categorydto);		
		return mav;
	}
	
}
