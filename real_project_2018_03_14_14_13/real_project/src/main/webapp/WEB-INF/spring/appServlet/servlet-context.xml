<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.project.*" />
	
	<!-- DriverManager :: connection 1개로 사용 -->
	<!-- <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="net.sf.log4jdbc.DriverSpy"/>
		<beans:property name="url" value="jdbc:log4jdbc:oracle:thin:@192.168.0.159:1521:XE"/>
		<beans:property name="username" value="web_user"/>
		<beans:property name="password" value="pass"/>
	</beans:bean> -->
	
	<beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="jdbc/Oracle"/>
		<beans:property name="resourceRef" value="true"/>
	</beans:bean>
	
	
	<!-- sqlSessionFactory :: Mybatis가 사용 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="configLocation" value="classpath:com/project/dao/mybatis-conf.xml"/>
		<beans:property name="mapperLocations" value="classpath:com/**/mapper/*.xml"/>
	</beans:bean>
	
	<!-- DAO using :: member -->
	<beans:bean id="mDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface" value="com.project.dao.MemberDao"/>
	</beans:bean>
	
	<!-- DAO using :: board -->
	<beans:bean id="bDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface" value="com.project.dao.BoardDao"/>
	</beans:bean>
	
	<!-- DAO using :: category -->
	<beans:bean id="cDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<beans:property name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<beans:property name="mapperInterface" value="com.project.dao.CategoryDao"/>
	</beans:bean>
	
	
	<!-- 파일 첨부(Multipart Resolver 설정):
			form태그 enctype="multipart/form-data" 인 경우 서버의 Bean으로 전달해줌  -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8"/> 
		<beans:property name="maxUploadSize" value="10000000"/> 
		<beans:property name="maxInMemorySize" value="10000000"/>	
	</beans:bean>	 

	 

	<!-- 태그를 이용한 Transactional 처리 -->
	<!-- <beans:bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean> -->	
	
	<!-- 웹소켓 사용 -->
    <websocket:handlers>
        <websocket:mapping path="/count" handler="myHandler"/>
    </websocket:handlers>
 	<!-- 웹 소켓 핸들러  -->
    <beans:bean id="myHandler" class="com.project.useClass.WebSocketHandler"/>
	
	 <!-- Session Interceptor -->
	 <interceptors>
		<interceptor>
			<!-- controller에 도착하기 전에 가로챌 요청. -->
			<mapping path="/estiWriteForm"/>
			<mapping path="/estiReplyWrite"/>
			<mapping path="/estiReplyDel"/>
			<mapping path="/estiBoardDelete"/>
			<mapping path="/estiBoardWrite"/>
			
			<!-- <mapping path="/mList1"/>
			<mapping path="/mList2"/>
			<mapping path="/mDel"/>
			<mapping path="/mList3"/>
			<mapping path="/msDel"/>
			
			<mapping path="/update_mypage"/>
			<mapping path="/update_pw"/>
			
			<mapping path="/myEstimate"/>
			<mapping path="/myUsed"/>
			<mapping path="/myBuyList"/>
			<mapping path="/noteSendAdmin"/>
			<mapping path="/noteListAdmin"/>
			<mapping path="/adminUserList1"/>
			<mapping path="/adminUserList2"/>
			<mapping path="/adminUserList3"/>
			<mapping path="/boardCategory"/>
			<mapping path="/myFavoriteBbs"/>
			<mapping path="/myFavoriteBbsList"/>
			<mapping path="/myTradeList"/>
			<mapping path="/detailPopUp"/>
			<mapping path="/safeDealFormPopUp"/>
			<mapping path="/myInfoPage1"/>
			<mapping path="/myInfoPage2"/>
			<mapping path="/dealModifyCall"/>
			<mapping path="/dealModifyStart"/>
			<mapping path="/dealUpdate"/>
			<mapping path="/dealAgree"/>
			<mapping path="/dealCancel"/>
			<mapping path="/dealCancelAgreeSell"/>
			<mapping path="/dealCancelAgreeAdmin"/>
			<mapping path="/payChk"/>
			<mapping path="/dealCancelRequest"/>
			<mapping path="/dealConfirm"/>
			<mapping path="/dealCancelCancel"/>
			<mapping path="/safeDealFormCall"/> -->
			
			<!-- exclude-mapping의 요청은 가로채지 않는다. -->  
			<!-- <exclude-mapping path="/"/> -->
			 
			<!-- Interceptor에 의해 가로챈 요청을 체크하는 Class		 -->
			<beans:bean class="com.project.useClass.SessionInterceptor"/>
		</interceptor>
	</interceptors>
	
	
	
</beans:beans>
